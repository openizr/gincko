// Vitest Snapshot v1

exports[`vue/FormField > renders correctly - Array 1`] = `
<div
  addbuttonprops="[object Object]"
  addtextfieldprops="[object Object]"
  customcomponents="[object Object]"
  fields=""
  id="path__0__to__field"
  isactive="true"
  modifiers="success "
  removebuttonprops="[object Object]"
  t="function(...o) {
    if (e.called = !0, e.callCount++, e.calls.push(o), e.next) {
      let [s, l] = e.next;
      if (e.results.push(e.next), e.next = null, s === \\"ok\\")
        return l;
      throw l;
    }
    let r, n = \\"ok\\";
    if (e.impl)
      try {
        r = e.impl.apply(this, o), n = \\"ok\\";
      } catch (s) {
        throw r = s, n = \\"error\\", e.results.push([n, s]), s;
      }
    let c = [n, r];
    if (v(r)) {
      let s = r.then((l) => c[1] = l).catch((l) => {
        throw c[0] = \\"error\\", c[1] = l, l;
      });
      Object.assign(s, r), r = s;
    }
    return e.results.push(c), r;
  }"
  type="array"
  userinputs="[object Object]"
  variables="[object Object]"
>
  {"path":"path.0.to.field"}
</div>
`;

exports[`vue/FormField > renders correctly - Array 2`] = `
<div
  addbuttonprops="[object Object]"
  addtextfieldprops="[object Object]"
  customcomponents="[object Object]"
  fields=""
  id="path__0__to__field"
  isactive="true"
  modifiers="success "
  removebuttonprops="[object Object]"
  t="function(...o) {
    if (e.called = !0, e.callCount++, e.calls.push(o), e.next) {
      let [s, l] = e.next;
      if (e.results.push(e.next), e.next = null, s === \\"ok\\")
        return l;
      throw l;
    }
    let r, n = \\"ok\\";
    if (e.impl)
      try {
        r = e.impl.apply(this, o), n = \\"ok\\";
      } catch (s) {
        throw r = s, n = \\"error\\", e.results.push([n, s]), s;
      }
    let c = [n, r];
    if (v(r)) {
      let s = r.then((l) => c[1] = l).catch((l) => {
        throw c[0] = \\"error\\", c[1] = l, l;
      });
      Object.assign(s, r), r = s;
    }
    return e.results.push(c), r;
  }"
  type="array"
  userinputs="[object Object]"
  variables="[object Object]"
>
  {"path":"path.0.to.field"}
</div>
`;

exports[`vue/FormField > renders correctly - Button 1`] = `
<div
  id="path__0__to__field"
  modifiers="success "
>
  {}
</div>
`;

exports[`vue/FormField > renders correctly - DatePicker 1`] = `
<div
  debouncetimeout="100"
  id="path__0__to__field"
  maxlength="10"
  modifiers="success "
  name="path.0.to.field"
>
  {}
</div>
`;

exports[`vue/FormField > renders correctly - DatePicker 2`] = `
<div
  debouncetimeout="100"
  id="path__0__to__field"
  maxlength="10"
  modifiers="success "
  name="path.0.to.field"
>
  {}
</div>
`;

exports[`vue/FormField > renders correctly - DynamicObject 1`] = `
<div
  addbuttonprops="[object Object]"
  addtextfieldprops="[object Object]"
  customcomponents="[object Object]"
  fields=""
  id="path__0__to__field"
  isactive="true"
  modifiers="success "
  removebuttonprops="[object Object]"
  t="function(...o) {
    if (e.called = !0, e.callCount++, e.calls.push(o), e.next) {
      let [s, l] = e.next;
      if (e.results.push(e.next), e.next = null, s === \\"ok\\")
        return l;
      throw l;
    }
    let r, n = \\"ok\\";
    if (e.impl)
      try {
        r = e.impl.apply(this, o), n = \\"ok\\";
      } catch (s) {
        throw r = s, n = \\"error\\", e.results.push([n, s]), s;
      }
    let c = [n, r];
    if (v(r)) {
      let s = r.then((l) => c[1] = l).catch((l) => {
        throw c[0] = \\"error\\", c[1] = l, l;
      });
      Object.assign(s, r), r = s;
    }
    return e.results.push(c), r;
  }"
  type="dynamicObject"
  userinputs="[object Object]"
  variables="[object Object]"
>
  {"path":"path.0.to.field"}
</div>
`;

exports[`vue/FormField > renders correctly - DynamicObject 2`] = `
<div
  addbuttonprops="[object Object]"
  addtextfieldprops="[object Object]"
  customcomponents="[object Object]"
  fields=""
  id="path__0__to__field"
  isactive="true"
  modifiers="success "
  removebuttonprops="[object Object]"
  t="function(...o) {
    if (e.called = !0, e.callCount++, e.calls.push(o), e.next) {
      let [s, l] = e.next;
      if (e.results.push(e.next), e.next = null, s === \\"ok\\")
        return l;
      throw l;
    }
    let r, n = \\"ok\\";
    if (e.impl)
      try {
        r = e.impl.apply(this, o), n = \\"ok\\";
      } catch (s) {
        throw r = s, n = \\"error\\", e.results.push([n, s]), s;
      }
    let c = [n, r];
    if (v(r)) {
      let s = r.then((l) => c[1] = l).catch((l) => {
        throw c[0] = \\"error\\", c[1] = l, l;
      });
      Object.assign(s, r), r = s;
    }
    return e.results.push(c), r;
  }"
  type="dynamicObject"
  userinputs="[object Object]"
  variables="[object Object]"
>
  {"path":"path.0.to.field"}
</div>
`;

exports[`vue/FormField > renders correctly - FilePicker 1`] = `
<div
  id="path__0__to__field"
  modifiers="success "
  name="path.0.to.field"
>
  {}
</div>
`;

exports[`vue/FormField > renders correctly - FilePicker 2`] = `
<div
  id="path__0__to__field"
  modifiers="success "
  name="path.0.to.field"
>
  {}
</div>
`;

exports[`vue/FormField > renders correctly - Link 1`] = `
<div
  id="path__0__to__field"
  label=""
  modifiers="success "
>
  {}
</div>
`;

exports[`vue/FormField > renders correctly - Message with label and helper 1`] = `
<div
  id="field"
>
  {"id":"path__0__to__field","label":"TRANSLATED LABEL","modifiers":"success "}
</div>
`;

exports[`vue/FormField > renders correctly - Message with label and message 1`] = `
<div
  id="field"
>
  {"id":"path__0__to__field","label":"TRANSLATED LABEL","modifiers":"success "}
</div>
`;

exports[`vue/FormField > renders correctly - Options 1`] = `
<div
  id="path__0__to__field"
  modifiers="success "
  name="path.0.to.field"
  options="[object Object],[object Object]"
>
  {}
</div>
`;

exports[`vue/FormField > renders correctly - Textarea 1`] = `
<div
  debouncetimeout="100"
  id="path__0__to__field"
  modifiers="success "
  name="path.0.to.field"
>
  {}
</div>
`;

exports[`vue/FormField > renders correctly - Textarea 2`] = `
<div
  debouncetimeout="100"
  id="path__0__to__field"
  modifiers="success "
  name="path.0.to.field"
>
  {}
</div>
`;

exports[`vue/FormField > renders correctly - Textfield 1`] = `
<div
  debouncetimeout="100"
  id="path__0__to__field"
  modifiers="success "
  name="path.0.to.field"
>
  {}
</div>
`;

exports[`vue/FormField > renders correctly - Textfield 2`] = `
<div
  debouncetimeout="100"
  id="path__0__to__field"
  modifiers="success "
  name="path.0.to.field"
>
  {}
</div>
`;
