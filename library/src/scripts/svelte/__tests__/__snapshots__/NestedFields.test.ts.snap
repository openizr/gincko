// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`svelte/NestedFields > renders correctly - array 1`] = `
<div>
  <div
    class="ui-nested-fields  array"
  >
    <span
      class="ui-nested-fields__label"
    >
      Test
    </span>
     
    
    <div
      class="ui-nested-fields__field"
    >
       
      <div>
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        function(...o) {
    if (e.called = !0, e.callCount++, e.calls.push(o), e.next) {
      let [s, l] = e.next;
      if (e.results.push(e.next), e.next = null, s === "ok")
        return l;
      throw l;
    }
    let r, n = "ok";
    if (e.impl)
      try {
        r = e.impl.apply(this, o), n = "ok";
      } catch (s) {
        throw r = s, n = "error", e.results.push([n, s]), s;
      }
    let c = [n, r];
    if (w(r)) {
      let s = r.then((l) =&gt; c[1] = l).catch((l) =&gt; {
        throw c[0] = "error", c[1] = l, l;
      });
      Object.assign(s, r), r = s;
    }
    return e.results.push(c), r;
  }
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
      </div>
      <!--&lt;GenericComponent&gt;-->
       
      <div
        id="field"
      >
        {"field":{"id":"Message","status":"initial","component":"Message","componentProps":{}},"path":"path.0.to.field.Message","isActive":false,"variables":{"var":"value"},"userInputs":{"test":"ok"},"customComponents":{}}
      </div>
      <!--&lt;Field&gt;-->
    </div>
    
    
    
     
    <div
      class="ui-nested-fields__add"
    >
       
      <div>
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
         
         
        undefined
         
        undefined
         
        function(...o) {
    if (e.called = !0, e.callCount++, e.calls.push(o), e.next) {
      let [s, l] = e.next;
      if (e.results.push(e.next), e.next = null, s === "ok")
        return l;
      throw l;
    }
    let r, n = "ok";
    if (e.impl)
      try {
        r = e.impl.apply(this, o), n = "ok";
      } catch (s) {
        throw r = s, n = "error", e.results.push([n, s]), s;
      }
    let c = [n, r];
    if (w(r)) {
      let s = r.then((l) =&gt; c[1] = l).catch((l) =&gt; {
        throw c[0] = "error", c[1] = l, l;
      });
      Object.assign(s, r), r = s;
    }
    return e.results.push(c), r;
  }
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
      </div>
      <!--&lt;GenericComponent&gt;-->
    </div>
     
    <span
      class="ui-nested-fields__helper"
    >
      Helper
    </span>
  </div>
  <!--&lt;NestedFields&gt;-->
</div>
`;

exports[`svelte/NestedFields > renders correctly - array with maxItems 1`] = `
<div>
  <div
    class="ui-nested-fields  array"
  >
     
    
    <div
      class="ui-nested-fields__field"
    >
       
      <div>
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        function(...o) {
    if (e.called = !0, e.callCount++, e.calls.push(o), e.next) {
      let [s, l] = e.next;
      if (e.results.push(e.next), e.next = null, s === "ok")
        return l;
      throw l;
    }
    let r, n = "ok";
    if (e.impl)
      try {
        r = e.impl.apply(this, o), n = "ok";
      } catch (s) {
        throw r = s, n = "error", e.results.push([n, s]), s;
      }
    let c = [n, r];
    if (w(r)) {
      let s = r.then((l) =&gt; c[1] = l).catch((l) =&gt; {
        throw c[0] = "error", c[1] = l, l;
      });
      Object.assign(s, r), r = s;
    }
    return e.results.push(c), r;
  }
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
      </div>
      <!--&lt;GenericComponent&gt;-->
       
      <div
        id="field"
      >
        {"field":{"id":"Message","status":"initial","component":"Message","componentProps":{}},"path":"path.0.to.field.Message","isActive":false,"variables":{"var":"value"},"userInputs":{"test":"ok"},"customComponents":{}}
      </div>
      <!--&lt;Field&gt;-->
    </div>
    
    
    
     
    <div
      class="ui-nested-fields__add"
    >
       
    </div>
     
  </div>
  <!--&lt;NestedFields&gt;-->
</div>
`;

exports[`svelte/NestedFields > renders correctly - array with maxItems 2`] = `
<div>
  <div
    class="ui-nested-fields  array"
  >
     
    
    <div
      class="ui-nested-fields__field"
    >
       
      <div>
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        function(...o) {
    if (e.called = !0, e.callCount++, e.calls.push(o), e.next) {
      let [s, l] = e.next;
      if (e.results.push(e.next), e.next = null, s === "ok")
        return l;
      throw l;
    }
    let r, n = "ok";
    if (e.impl)
      try {
        r = e.impl.apply(this, o), n = "ok";
      } catch (s) {
        throw r = s, n = "error", e.results.push([n, s]), s;
      }
    let c = [n, r];
    if (w(r)) {
      let s = r.then((l) =&gt; c[1] = l).catch((l) =&gt; {
        throw c[0] = "error", c[1] = l, l;
      });
      Object.assign(s, r), r = s;
    }
    return e.results.push(c), r;
  }
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
      </div>
      <!--&lt;GenericComponent&gt;-->
       
      <div
        id="field"
      >
        {"field":{"id":"Message","status":"initial","component":"Message","componentProps":{}},"path":"path.0.to.field.Message","isActive":false,"variables":{"var":"value"},"userInputs":{"test":"ok"},"customComponents":{}}
      </div>
      <!--&lt;Field&gt;-->
    </div>
    
    
    
     
    <div
      class="ui-nested-fields__add"
    >
       
    </div>
     
  </div>
  <!--&lt;NestedFields&gt;-->
</div>
`;

exports[`svelte/NestedFields > renders correctly - array with minItems 1`] = `
<div>
  <div
    class="ui-nested-fields  array"
  >
     
    
    <div
      class="ui-nested-fields__field"
    >
       
      <div>
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        function(...o) {
    if (e.called = !0, e.callCount++, e.calls.push(o), e.next) {
      let [s, l] = e.next;
      if (e.results.push(e.next), e.next = null, s === "ok")
        return l;
      throw l;
    }
    let r, n = "ok";
    if (e.impl)
      try {
        r = e.impl.apply(this, o), n = "ok";
      } catch (s) {
        throw r = s, n = "error", e.results.push([n, s]), s;
      }
    let c = [n, r];
    if (w(r)) {
      let s = r.then((l) =&gt; c[1] = l).catch((l) =&gt; {
        throw c[0] = "error", c[1] = l, l;
      });
      Object.assign(s, r), r = s;
    }
    return e.results.push(c), r;
  }
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
      </div>
      <!--&lt;GenericComponent&gt;-->
       
      <div
        id="field"
      >
        {"field":{"id":"Message1","status":"initial","component":"Message","componentProps":{}},"path":"path.0.to.field.Message1","isActive":false,"variables":{"var":"value"},"userInputs":{"test":"ok"},"customComponents":{}}
      </div>
      <!--&lt;Field&gt;-->
    </div>
    
    
    <div
      class="ui-nested-fields__field"
    >
       
      <div>
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        function(...o) {
    if (e.called = !0, e.callCount++, e.calls.push(o), e.next) {
      let [s, l] = e.next;
      if (e.results.push(e.next), e.next = null, s === "ok")
        return l;
      throw l;
    }
    let r, n = "ok";
    if (e.impl)
      try {
        r = e.impl.apply(this, o), n = "ok";
      } catch (s) {
        throw r = s, n = "error", e.results.push([n, s]), s;
      }
    let c = [n, r];
    if (w(r)) {
      let s = r.then((l) =&gt; c[1] = l).catch((l) =&gt; {
        throw c[0] = "error", c[1] = l, l;
      });
      Object.assign(s, r), r = s;
    }
    return e.results.push(c), r;
  }
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
      </div>
      <!--&lt;GenericComponent&gt;-->
       
      <div
        id="field"
      >
        {"field":{"id":"Message2","status":"initial","component":"Message","componentProps":{}},"path":"path.0.to.field.Message2","isActive":false,"variables":{"var":"value"},"userInputs":{"test":"ok"},"customComponents":{}}
      </div>
      <!--&lt;Field&gt;-->
    </div>
    
    
    <div
      class="ui-nested-fields__field"
    >
       
      <div>
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        function(...o) {
    if (e.called = !0, e.callCount++, e.calls.push(o), e.next) {
      let [s, l] = e.next;
      if (e.results.push(e.next), e.next = null, s === "ok")
        return l;
      throw l;
    }
    let r, n = "ok";
    if (e.impl)
      try {
        r = e.impl.apply(this, o), n = "ok";
      } catch (s) {
        throw r = s, n = "error", e.results.push([n, s]), s;
      }
    let c = [n, r];
    if (w(r)) {
      let s = r.then((l) =&gt; c[1] = l).catch((l) =&gt; {
        throw c[0] = "error", c[1] = l, l;
      });
      Object.assign(s, r), r = s;
    }
    return e.results.push(c), r;
  }
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
      </div>
      <!--&lt;GenericComponent&gt;-->
       
      <div
        id="field"
      >
        {"field":{"id":"Message3","status":"initial","component":"Message","componentProps":{}},"path":"path.0.to.field.Message3","isActive":false,"variables":{"var":"value"},"userInputs":{"test":"ok"},"customComponents":{}}
      </div>
      <!--&lt;Field&gt;-->
    </div>
    
     
    <div
      class="ui-nested-fields__add"
    >
       
      <div>
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
         
         
        undefined
         
        undefined
         
        function(...o) {
    if (e.called = !0, e.callCount++, e.calls.push(o), e.next) {
      let [s, l] = e.next;
      if (e.results.push(e.next), e.next = null, s === "ok")
        return l;
      throw l;
    }
    let r, n = "ok";
    if (e.impl)
      try {
        r = e.impl.apply(this, o), n = "ok";
      } catch (s) {
        throw r = s, n = "error", e.results.push([n, s]), s;
      }
    let c = [n, r];
    if (w(r)) {
      let s = r.then((l) =&gt; c[1] = l).catch((l) =&gt; {
        throw c[0] = "error", c[1] = l, l;
      });
      Object.assign(s, r), r = s;
    }
    return e.results.push(c), r;
  }
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
      </div>
      <!--&lt;GenericComponent&gt;-->
    </div>
     
  </div>
  <!--&lt;NestedFields&gt;-->
</div>
`;

exports[`svelte/NestedFields > renders correctly - array with minItems 2`] = `
<div>
  <div
    class="ui-nested-fields  array"
  >
     
    
    <div
      class="ui-nested-fields__field"
    >
       
       
      <div
        id="field"
      >
        {"field":{"id":"Message1","status":"initial","component":"Message","componentProps":{}},"path":"path.0.to.field.Message1","isActive":false,"variables":{"var":"value"},"userInputs":{"test":"ok"},"customComponents":{}}
      </div>
      <!--&lt;Field&gt;-->
    </div>
    
    
    <div
      class="ui-nested-fields__field"
    >
       
       
      <div
        id="field"
      >
        {"field":{"id":"Message2","status":"initial","component":"Message","componentProps":{}},"path":"path.0.to.field.Message2","isActive":false,"variables":{"var":"value"},"userInputs":{"test":"ok"},"customComponents":{}}
      </div>
      <!--&lt;Field&gt;-->
    </div>
    
    
    
     
    <div
      class="ui-nested-fields__add"
    >
       
      <div>
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
         
         
        undefined
         
        undefined
         
        function(...o) {
    if (e.called = !0, e.callCount++, e.calls.push(o), e.next) {
      let [s, l] = e.next;
      if (e.results.push(e.next), e.next = null, s === "ok")
        return l;
      throw l;
    }
    let r, n = "ok";
    if (e.impl)
      try {
        r = e.impl.apply(this, o), n = "ok";
      } catch (s) {
        throw r = s, n = "error", e.results.push([n, s]), s;
      }
    let c = [n, r];
    if (w(r)) {
      let s = r.then((l) =&gt; c[1] = l).catch((l) =&gt; {
        throw c[0] = "error", c[1] = l, l;
      });
      Object.assign(s, r), r = s;
    }
    return e.results.push(c), r;
  }
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
      </div>
      <!--&lt;GenericComponent&gt;-->
    </div>
     
  </div>
  <!--&lt;NestedFields&gt;-->
</div>
`;

exports[`svelte/NestedFields > renders correctly - dynamicObject with error 1`] = `
<div>
  <div
    class="ui-nested-fields  dynamicObject"
  >
     
    
    <div
      class="ui-nested-fields__field"
    >
      <span
        class="ui-nested-fields__field__label"
      >
        Message1
      </span>
       
      <div>
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        function(...o) {
    if (e.called = !0, e.callCount++, e.calls.push(o), e.next) {
      let [s, l] = e.next;
      if (e.results.push(e.next), e.next = null, s === "ok")
        return l;
      throw l;
    }
    let r, n = "ok";
    if (e.impl)
      try {
        r = e.impl.apply(this, o), n = "ok";
      } catch (s) {
        throw r = s, n = "error", e.results.push([n, s]), s;
      }
    let c = [n, r];
    if (w(r)) {
      let s = r.then((l) =&gt; c[1] = l).catch((l) =&gt; {
        throw c[0] = "error", c[1] = l, l;
      });
      Object.assign(s, r), r = s;
    }
    return e.results.push(c), r;
  }
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
      </div>
      <!--&lt;GenericComponent&gt;-->
       
      <div
        id="field"
      >
        {"field":{"id":"Message1","status":"initial","component":"Message","componentProps":{}},"path":"path.0.to.field.Message1","isActive":false,"variables":{"var":"value"},"userInputs":{"test":"ok"},"customComponents":{}}
      </div>
      <!--&lt;Field&gt;-->
    </div>
    
    
    <div
      class="ui-nested-fields__field"
    >
      <span
        class="ui-nested-fields__field__label"
      >
        Message2
      </span>
       
      <div>
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        function(...o) {
    if (e.called = !0, e.callCount++, e.calls.push(o), e.next) {
      let [s, l] = e.next;
      if (e.results.push(e.next), e.next = null, s === "ok")
        return l;
      throw l;
    }
    let r, n = "ok";
    if (e.impl)
      try {
        r = e.impl.apply(this, o), n = "ok";
      } catch (s) {
        throw r = s, n = "error", e.results.push([n, s]), s;
      }
    let c = [n, r];
    if (w(r)) {
      let s = r.then((l) =&gt; c[1] = l).catch((l) =&gt; {
        throw c[0] = "error", c[1] = l, l;
      });
      Object.assign(s, r), r = s;
    }
    return e.results.push(c), r;
  }
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
      </div>
      <!--&lt;GenericComponent&gt;-->
       
      <div
        id="field"
      >
        {"field":{"id":"Message2","status":"initial","component":"Message","componentProps":{}},"path":"path.0.to.field.Message2","isActive":false,"variables":{"var":"value"},"userInputs":{"test":"ok"},"customComponents":{}}
      </div>
      <!--&lt;Field&gt;-->
    </div>
    
    
    
     
    <div
      class="ui-nested-fields__add"
    >
      <div>
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        null-add
         
        undefined
         
        
         
        undefined
         
        undefined
         
        100
         
        undefined
         
        true
         
        undefined
         
        undefined
         
        undefined
         
        function(...o) {
    if (e.called = !0, e.callCount++, e.calls.push(o), e.next) {
      let [s, l] = e.next;
      if (e.results.push(e.next), e.next = null, s === "ok")
        return l;
      throw l;
    }
    let r, n = "ok";
    if (e.impl)
      try {
        r = e.impl.apply(this, o), n = "ok";
      } catch (s) {
        throw r = s, n = "error", e.results.push([n, s]), s;
      }
    let c = [n, r];
    if (w(r)) {
      let s = r.then((l) =&gt; c[1] = l).catch((l) =&gt; {
        throw c[0] = "error", c[1] = l, l;
      });
      Object.assign(s, r), r = s;
    }
    return e.results.push(c), r;
  }
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
      </div>
      <!--&lt;GenericComponent&gt;-->
       
      <div>
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        disabled 
         
        undefined
         
        undefined
         
        function(...o) {
    if (e.called = !0, e.callCount++, e.calls.push(o), e.next) {
      let [s, l] = e.next;
      if (e.results.push(e.next), e.next = null, s === "ok")
        return l;
      throw l;
    }
    let r, n = "ok";
    if (e.impl)
      try {
        r = e.impl.apply(this, o), n = "ok";
      } catch (s) {
        throw r = s, n = "error", e.results.push([n, s]), s;
      }
    let c = [n, r];
    if (w(r)) {
      let s = r.then((l) =&gt; c[1] = l).catch((l) =&gt; {
        throw c[0] = "error", c[1] = l, l;
      });
      Object.assign(s, r), r = s;
    }
    return e.results.push(c), r;
  }
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
      </div>
      <!--&lt;GenericComponent&gt;-->
    </div>
     
  </div>
  <!--&lt;NestedFields&gt;-->
</div>
`;

exports[`svelte/NestedFields > renders correctly - dynamicObject with invalid pattern 1`] = `
<div>
  <div
    class="ui-nested-fields  dynamicObject"
  >
     
    
    <div
      class="ui-nested-fields__field"
    >
      <span
        class="ui-nested-fields__field__label"
      >
        Message
      </span>
       
      <div>
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        function(...o) {
    if (e.called = !0, e.callCount++, e.calls.push(o), e.next) {
      let [s, l] = e.next;
      if (e.results.push(e.next), e.next = null, s === "ok")
        return l;
      throw l;
    }
    let r, n = "ok";
    if (e.impl)
      try {
        r = e.impl.apply(this, o), n = "ok";
      } catch (s) {
        throw r = s, n = "error", e.results.push([n, s]), s;
      }
    let c = [n, r];
    if (w(r)) {
      let s = r.then((l) =&gt; c[1] = l).catch((l) =&gt; {
        throw c[0] = "error", c[1] = l, l;
      });
      Object.assign(s, r), r = s;
    }
    return e.results.push(c), r;
  }
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
      </div>
      <!--&lt;GenericComponent&gt;-->
       
      <div
        id="field"
      >
        {"field":{"id":"Message","status":"initial","component":"Message","componentProps":{}},"path":"path.0.to.field.Message","isActive":false,"variables":{"var":"value"},"userInputs":{"test":"ok"},"customComponents":{}}
      </div>
      <!--&lt;Field&gt;-->
    </div>
    
    
    
     
    <div
      class="ui-nested-fields__add"
    >
      <div>
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        null-add
         
        undefined
         
        
         
        undefined
         
        INVALID
         
        10
         
        undefined
         
        true
         
        undefined
         
        undefined
         
        undefined
         
        function(...o) {
    if (e.called = !0, e.callCount++, e.calls.push(o), e.next) {
      let [s, l] = e.next;
      if (e.results.push(e.next), e.next = null, s === "ok")
        return l;
      throw l;
    }
    let r, n = "ok";
    if (e.impl)
      try {
        r = e.impl.apply(this, o), n = "ok";
      } catch (s) {
        throw r = s, n = "error", e.results.push([n, s]), s;
      }
    let c = [n, r];
    if (w(r)) {
      let s = r.then((l) =&gt; c[1] = l).catch((l) =&gt; {
        throw c[0] = "error", c[1] = l, l;
      });
      Object.assign(s, r), r = s;
    }
    return e.results.push(c), r;
  }
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
      </div>
      <!--&lt;GenericComponent&gt;-->
       
      <div>
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        disabled 
         
        undefined
         
        undefined
         
        function(...o) {
    if (e.called = !0, e.callCount++, e.calls.push(o), e.next) {
      let [s, l] = e.next;
      if (e.results.push(e.next), e.next = null, s === "ok")
        return l;
      throw l;
    }
    let r, n = "ok";
    if (e.impl)
      try {
        r = e.impl.apply(this, o), n = "ok";
      } catch (s) {
        throw r = s, n = "error", e.results.push([n, s]), s;
      }
    let c = [n, r];
    if (w(r)) {
      let s = r.then((l) =&gt; c[1] = l).catch((l) =&gt; {
        throw c[0] = "error", c[1] = l, l;
      });
      Object.assign(s, r), r = s;
    }
    return e.results.push(c), r;
  }
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
      </div>
      <!--&lt;GenericComponent&gt;-->
    </div>
     
  </div>
  <!--&lt;NestedFields&gt;-->
</div>
`;

exports[`svelte/NestedFields > renders correctly - dynamicObject with valid pattern 1`] = `
<div>
  <div
    class="ui-nested-fields  dynamicObject"
  >
     
    
    <div
      class="ui-nested-fields__field"
    >
      <span
        class="ui-nested-fields__field__label"
      >
        Message
      </span>
       
      <div>
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        function(...o) {
    if (e.called = !0, e.callCount++, e.calls.push(o), e.next) {
      let [s, l] = e.next;
      if (e.results.push(e.next), e.next = null, s === "ok")
        return l;
      throw l;
    }
    let r, n = "ok";
    if (e.impl)
      try {
        r = e.impl.apply(this, o), n = "ok";
      } catch (s) {
        throw r = s, n = "error", e.results.push([n, s]), s;
      }
    let c = [n, r];
    if (w(r)) {
      let s = r.then((l) =&gt; c[1] = l).catch((l) =&gt; {
        throw c[0] = "error", c[1] = l, l;
      });
      Object.assign(s, r), r = s;
    }
    return e.results.push(c), r;
  }
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
      </div>
      <!--&lt;GenericComponent&gt;-->
       
      <div
        id="field"
      >
        {"field":{"id":"Message","status":"initial","component":"Message","componentProps":{}},"path":"path.0.to.field.Message","isActive":false,"variables":{"var":"value"},"userInputs":{"test":"ok"},"customComponents":{}}
      </div>
      <!--&lt;Field&gt;-->
    </div>
    
    
    
     
    <div
      class="ui-nested-fields__add"
    >
      <div>
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        null-add
         
        undefined
         
        
         
        undefined
         
        undefined
         
        10
         
        undefined
         
        true
         
        undefined
         
        undefined
         
        undefined
         
        function(...o) {
    if (e.called = !0, e.callCount++, e.calls.push(o), e.next) {
      let [s, l] = e.next;
      if (e.results.push(e.next), e.next = null, s === "ok")
        return l;
      throw l;
    }
    let r, n = "ok";
    if (e.impl)
      try {
        r = e.impl.apply(this, o), n = "ok";
      } catch (s) {
        throw r = s, n = "error", e.results.push([n, s]), s;
      }
    let c = [n, r];
    if (w(r)) {
      let s = r.then((l) =&gt; c[1] = l).catch((l) =&gt; {
        throw c[0] = "error", c[1] = l, l;
      });
      Object.assign(s, r), r = s;
    }
    return e.results.push(c), r;
  }
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
      </div>
      <!--&lt;GenericComponent&gt;-->
       
      <div>
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        disabled 
         
        undefined
         
        undefined
         
        function(...o) {
    if (e.called = !0, e.callCount++, e.calls.push(o), e.next) {
      let [s, l] = e.next;
      if (e.results.push(e.next), e.next = null, s === "ok")
        return l;
      throw l;
    }
    let r, n = "ok";
    if (e.impl)
      try {
        r = e.impl.apply(this, o), n = "ok";
      } catch (s) {
        throw r = s, n = "error", e.results.push([n, s]), s;
      }
    let c = [n, r];
    if (w(r)) {
      let s = r.then((l) =&gt; c[1] = l).catch((l) =&gt; {
        throw c[0] = "error", c[1] = l, l;
      });
      Object.assign(s, r), r = s;
    }
    return e.results.push(c), r;
  }
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
         
        undefined
      </div>
      <!--&lt;GenericComponent&gt;-->
    </div>
     
  </div>
  <!--&lt;NestedFields&gt;-->
</div>
`;

exports[`svelte/NestedFields > renders correctly - object 1`] = `
<div>
  <div
    class="ui-nested-fields  object"
  >
     
    
    <div
      class="ui-nested-fields__field"
    >
       
       
      <div
        id="field"
      >
        {"field":{"id":"Message","status":"initial","component":"Message","componentProps":{}},"path":"path.0.to.field.Message","isActive":false,"variables":{"var":"value"},"userInputs":{"test":"ok"},"customComponents":{}}
      </div>
      <!--&lt;Field&gt;-->
    </div>
    
    
    
     
     
  </div>
  <!--&lt;NestedFields&gt;-->
</div>
`;
